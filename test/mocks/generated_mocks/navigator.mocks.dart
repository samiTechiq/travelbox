// Mocks generated by Mockito 5.4.0 from annotations
// in travelbox/test/demo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/material.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:travelbox/utils/core/go_router/routes_navigation.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Navigation].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigation extends _i1.Mock implements _i2.Navigation {
  MockNavigation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void go(
    _i3.BuildContext? context,
    String? path,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #go,
          [
            context,
            path,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void goNamed(
    _i3.BuildContext? context,
    String? path,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #goNamed,
          [
            context,
            path,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void push(
    _i3.BuildContext? context,
    String? path,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #push,
          [
            context,
            path,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void pushWithArgs<T>(
    _i3.BuildContext? context,
    String? path, {
    required T? args,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #pushWithArgs,
          [
            context,
            path,
          ],
          {#args: args},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void goBack(_i3.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #goBack,
          [context],
        ),
        returnValueForMissingStub: null,
      );
}
