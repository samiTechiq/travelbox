// Mocks generated by Mockito 5.4.4 from annotations
// in travelbox/test/demo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i10;

import 'package:flutter/material.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:travelbox/features/cover_quote/viewmodel/cover_quote_viewmodel.dart'
as _i6;
import 'package:travelbox/features/questions/model/quote_model.dart' as _i5;
import 'package:travelbox/features/questions/views/attending_customer/viewmodel/attending_customer_viewmodel.dart'
as _i7;
import 'package:travelbox/features/questions/views/basic_info/viewmodel/basic_info_viewmodel.dart'
as _i9;
import 'package:travelbox/features/questions/views/both_cover_detail/viewmodel/both_cover_detail_viewmodel.dart'
as _i3;
import 'package:travelbox/features/questions/views/start_end_picker_screen/viewmodel/start_end_picker_viewmodel.dart'
as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTextEditingController_0 extends _i1.SmartFake
    implements _i2.TextEditingController {
  _FakeTextEditingController_0(
      Object parent,
      Invocation parentInvocation,
      ) : super(
    parent,
    parentInvocation,
  );
}

class _FakeFocusNode_1 extends _i1.SmartFake implements _i2.FocusNode {
  _FakeFocusNode_1(
      Object parent,
      Invocation parentInvocation,
      ) : super(
    parent,
    parentInvocation,
  );

  @override
  String toString({_i2.DiagnosticLevel? minLevel = _i2.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [BothCoverDetailViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockBothCoverDetailViewModel extends _i1.Mock
    implements _i3.BothCoverDetailViewModel {
  MockBothCoverDetailViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TextEditingController get firstNameController => (super.noSuchMethod(
    Invocation.getter(#firstNameController),
    returnValue: _FakeTextEditingController_0(
      this,
      Invocation.getter(#firstNameController),
    ),
  ) as _i2.TextEditingController);

  @override
  _i2.TextEditingController get lastNameController => (super.noSuchMethod(
    Invocation.getter(#lastNameController),
    returnValue: _FakeTextEditingController_0(
      this,
      Invocation.getter(#lastNameController),
    ),
  ) as _i2.TextEditingController);

  @override
  _i2.TextEditingController get emailController => (super.noSuchMethod(
    Invocation.getter(#emailController),
    returnValue: _FakeTextEditingController_0(
      this,
      Invocation.getter(#emailController),
    ),
  ) as _i2.TextEditingController);

  @override
  _i2.TextEditingController get idCardController => (super.noSuchMethod(
    Invocation.getter(#idCardController),
    returnValue: _FakeTextEditingController_0(
      this,
      Invocation.getter(#idCardController),
    ),
  ) as _i2.TextEditingController);

  @override
  _i2.TextEditingController get idCardCodeController => (super.noSuchMethod(
    Invocation.getter(#idCardCodeController),
    returnValue: _FakeTextEditingController_0(
      this,
      Invocation.getter(#idCardCodeController),
    ),
  ) as _i2.TextEditingController);

  @override
  _i2.FocusNode get firstNameFocusNode => (super.noSuchMethod(
    Invocation.getter(#firstNameFocusNode),
    returnValue: _FakeFocusNode_1(
      this,
      Invocation.getter(#firstNameFocusNode),
    ),
  ) as _i2.FocusNode);

  @override
  _i2.FocusNode get lastNameFocusNode => (super.noSuchMethod(
    Invocation.getter(#lastNameFocusNode),
    returnValue: _FakeFocusNode_1(
      this,
      Invocation.getter(#lastNameFocusNode),
    ),
  ) as _i2.FocusNode);

  @override
  _i2.FocusNode get emailFocusNode => (super.noSuchMethod(
    Invocation.getter(#emailFocusNode),
    returnValue: _FakeFocusNode_1(
      this,
      Invocation.getter(#emailFocusNode),
    ),
  ) as _i2.FocusNode);

  @override
  _i2.FocusNode get idCardFocusNode => (super.noSuchMethod(
    Invocation.getter(#idCardFocusNode),
    returnValue: _FakeFocusNode_1(
      this,
      Invocation.getter(#idCardFocusNode),
    ),
  ) as _i2.FocusNode);

  @override
  _i2.FocusNode get idCardCodeFocusNode => (super.noSuchMethod(
    Invocation.getter(#idCardCodeFocusNode),
    returnValue: _FakeFocusNode_1(
      this,
      Invocation.getter(#idCardCodeFocusNode),
    ),
  ) as _i2.FocusNode);

  @override
  bool get isFirstNameValid => (super.noSuchMethod(
    Invocation.getter(#isFirstNameValid),
    returnValue: false,
  ) as bool);

  @override
  set isFirstNameValid(bool? _isFirstNameValid) => super.noSuchMethod(
    Invocation.setter(
      #isFirstNameValid,
      _isFirstNameValid,
    ),
    returnValueForMissingStub: null,
  );

  @override
  bool get isLastNameValid => (super.noSuchMethod(
    Invocation.getter(#isLastNameValid),
    returnValue: false,
  ) as bool);

  @override
  set isLastNameValid(bool? _isLastNameValid) => super.noSuchMethod(
    Invocation.setter(
      #isLastNameValid,
      _isLastNameValid,
    ),
    returnValueForMissingStub: null,
  );

  @override
  bool get isEmailValid => (super.noSuchMethod(
    Invocation.getter(#isEmailValid),
    returnValue: false,
  ) as bool);

  @override
  set isEmailValid(bool? _isEmailValid) => super.noSuchMethod(
    Invocation.setter(
      #isEmailValid,
      _isEmailValid,
    ),
    returnValueForMissingStub: null,
  );

  @override
  bool get isFormValid => (super.noSuchMethod(
    Invocation.getter(#isFormValid),
    returnValue: false,
  ) as bool);

  @override
  set isFormValid(bool? _isFormValid) => super.noSuchMethod(
    Invocation.setter(
      #isFormValid,
      _isFormValid,
    ),
    returnValueForMissingStub: null,
  );

  @override
  bool get isIDCardCodeValid => (super.noSuchMethod(
    Invocation.getter(#isIDCardCodeValid),
    returnValue: false,
  ) as bool);

  @override
  set isIDCardCodeValid(bool? _isIDCardCodeValid) => super.noSuchMethod(
    Invocation.setter(
      #isIDCardCodeValid,
      _isIDCardCodeValid,
    ),
    returnValueForMissingStub: null,
  );

  @override
  bool get isIDCardValid => (super.noSuchMethod(
    Invocation.getter(#isIDCardValid),
    returnValue: false,
  ) as bool);

  @override
  set isIDCardValid(bool? _isIDCardValid) => super.noSuchMethod(
    Invocation.setter(
      #isIDCardValid,
      _isIDCardValid,
    ),
    returnValueForMissingStub: null,
  );

  @override
  set dateOfBirth(String? dateOfBirth) => super.noSuchMethod(
    Invocation.setter(
      #dateOfBirth,
      dateOfBirth,
    ),
    returnValueForMissingStub: null,
  );

  @override
  set emailController(_i2.TextEditingController? emailController) =>
      super.noSuchMethod(
        Invocation.setter(
          #emailController,
          emailController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set firstNameController(_i2.TextEditingController? firstNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #firstNameController,
          firstNameController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set lastNameController(_i2.TextEditingController? lastNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #lastNameController,
          lastNameController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set idCardController(_i2.TextEditingController? idCardController) =>
      super.noSuchMethod(
        Invocation.setter(
          #idCardController,
          idCardController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set idCardCodeController(_i2.TextEditingController? idCardController) =>
      super.noSuchMethod(
        Invocation.setter(
          #idCardCodeController,
          idCardController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
    Invocation.getter(#hasListeners),
    returnValue: false,
  ) as bool);

  @override
  void validateIDCard(String? value) => super.noSuchMethod(
    Invocation.method(
      #validateIDCard,
      [value],
    ),
    returnValueForMissingStub: null,
  );

  @override
  void validateIDCardCode(String? value) => super.noSuchMethod(
    Invocation.method(
      #validateIDCardCode,
      [value],
    ),
    returnValueForMissingStub: null,
  );

  @override
  void validateFirstName(String? value) => super.noSuchMethod(
    Invocation.method(
      #validateFirstName,
      [value],
    ),
    returnValueForMissingStub: null,
  );

  @override
  void validateLastName(String? value) => super.noSuchMethod(
    Invocation.method(
      #validateLastName,
      [value],
    ),
    returnValueForMissingStub: null,
  );

  @override
  void validateEmail(String? value) => super.noSuchMethod(
    Invocation.method(
      #validateEmail,
      [value],
    ),
    returnValueForMissingStub: null,
  );

  @override
  void validateForm() => super.noSuchMethod(
    Invocation.method(
      #validateForm,
      [],
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<List<_i5.Quote>> getQuote(
      _i6.CoverQuoteViewModel? coverQuoteViewModel,
      _i7.AttendingCustomerViewModel? attendingCustomerViewModel,
      _i8.StartEndPickerViewModel? startEndPickerViewModel,
      _i9.BasicInfoViewModel? basicInfoViewModel,
      ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuote,
          [
            coverQuoteViewModel,
            attendingCustomerViewModel,
            startEndPickerViewModel,
            basicInfoViewModel,
          ],
        ),
        returnValue: _i4.Future<List<_i5.Quote>>.value(<_i5.Quote>[]),
      ) as _i4.Future<List<_i5.Quote>>);

  @override
  _i4.Future<List<_i5.Quote>> getQuoteForTwo(
      _i6.CoverQuoteViewModel? coverQuoteViewModel,
      _i7.AttendingCustomerViewModel? attendingCustomerViewModel,
      _i8.StartEndPickerViewModel? startEndPickerViewModel,
      _i9.BasicInfoViewModel? basicInfoViewModel,
      _i3.BothCoverDetailViewModel? bothCoverDetailViewModel,
      ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuoteForTwo,
          [
            coverQuoteViewModel,
            attendingCustomerViewModel,
            startEndPickerViewModel,
            basicInfoViewModel,
            bothCoverDetailViewModel,
          ],
        ),
        returnValue: _i4.Future<List<_i5.Quote>>.value(<_i5.Quote>[]),
      ) as _i4.Future<List<_i5.Quote>>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(
      #dispose,
      [],
    ),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(
      #addListener,
      [listener],
    ),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(
      #removeListener,
      [listener],
    ),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(
      #notifyListeners,
      [],
    ),
    returnValueForMissingStub: null,
  );
}